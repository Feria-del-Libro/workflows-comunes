on:
  workflow_call:
    inputs:
      RELEASE_REVISION:
        required: true
        type: string
      HELM_CHART_REPO:
        required: false
        type: string
      CHART_NAME:
          required: false
          type: string
      VALUES_LOCAL_PATH:
        required: false
        type: string
      ENVIRONMENT:
        required: true
        type: string
      AWS_ACCOUNT:
          required: false
          default: "533267199925"
          type: string
      KUBE_NAMESPACE:
        required: false
        type: string
      KUBE_CLUSTER:
        required: false
        type: string
      DEPLOYMENT:
        required: true
        type: string
      VALUES:
        required: false
        type: string
      DRYRUN:
        required: false
        type: string
      DEBUG:
        required: false
        type: string

name: Deploy helm chart V2  s

env:
  DEPLOYMENT: ${{ inputs.DEPLOYMENT }}
  CHART_NAME: ${{ inputs.DEPLOYMENT }}
  VALUES_LOCAL_PATH: helm/chart
  HELM_CHART_REPO: s3://rackoot-helm-charts
  VALUES: environment=${{ inputs.ENVIRONMENT }},app_version=${{ inputs.RELEASE_REVISION }},secretAccessKey=${{ secrets.AWS_SECRET_ACCESS_KEY }},accessKeyID=${{ secrets.AWS_ACCESS_KEY_ID }},aws_account_id=${{ inputs.AWS_ACCOUNT }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  KUBE_NAMESPACE: ${{ inputs.ENVIRONMENT }}
jobs:
  reusable_workflow_job:
    name: Deploy Chart
    runs-on: ubuntu-latest
    #environment: ${{ inputs.ENVIRONMENT }}
    steps:
    - name: Define KUBE variables if dev
      if: ${{ inputs.ENVIRONMENT == 'dev' }}
      run: |
        #echo "KUBE_CONFIG=${{ secrets.KUBE_CONFIG_DEV }}" >> $GITHUB_ENV
        echo "KUBE_CLUSTER=${{ vars.KUBE_CLUSTER_DEV }}" >> $GITHUB_ENV 
    - name: Define KUBE variables if test
      if: ${{ inputs.ENVIRONMENT == 'test' }}
      run: |
        echo "KUBE_CLUSTER=${{ vars.KUBE_CLUSTER_TEST }}" >> $GITHUB_ENV
    - name: Define KUBE variables if prod
      if: ${{ inputs.ENVIRONMENT == 'prod' }}
      run: |
        echo "KUBE_CLUSTER=${{ vars.KUBE_CLUSTER_PROD }}" >> $GITHUB_ENV
    - name: If account Racky (533267199925)
      if: ${{ inputs.AWS_ACCOUNT == '533267199925' }}
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_533267199925 }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_533267199925 }}" >> $GITHUB_ENV
        echo "HELM_CHART_REPO=s3://racky-helm-charts" >> $GITHUB_ENV
        echo "CLUSTER_ROLE_ARN=arn:aws:iam::${{ inputs.AWS_ACCOUNT }}:role/Admin-Role" >> $GITHUB_ENV
        echo "VALUES=environment=${{ inputs.ENVIRONMENT }},app_version=${{ inputs.RELEASE_REVISION }},secretAccessKey=${{ secrets.AWS_SECRET_ACCESS_KEY_533267199925 }},accessKeyID=${{ secrets.AWS_ACCESS_KEY_ID_533267199925 }},aws_account_id=${{ inputs.AWS_ACCOUNT }}" >> $GITHUB_ENV

    - name: Set deployment name # if is different from secrets.DEPLOYMENT
      if: ${{ inputs.DEPLOYMENT }}
      run: echo "DEPLOYMENT=${{ inputs.DEPLOYMENT }}" >> $GITHUB_ENV

    - name: Set values path # if it's not helm/chart
      if: ${{ inputs.VALUES_LOCAL_PATH }}
      run: echo "VALUES_LOCAL_PATH=${{ inputs.VALUES_LOCAL_PATH }}" >> $GITHUB_ENV

    - name: Set values
      if: ${{ inputs.VALUES }}
      run: echo "VALUES=${{ inputs.VALUES }}" >> $GITHUB_OUTPUT

    - name: Set chart_name if exist inputs.CHART_NAME
      if: ${{ inputs.CHART_NAME }}
      run: echo "CHART_NAME=${{ inputs.CHART_NAME }}" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.RELEASE_REVISION }}

    - name: Get values from master if not exists in tag
      run: |
        if [ ! -f "${{ env.VALUES_LOCAL_PATH }}/env/values-${{ inputs.ENVIRONMENT }}.yaml" ]
        then
          echo "CHECKOUT_MASTER=1" >> $GITHUB_ENV
        fi
   
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
      
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig \
          --name ${{ env.KUBE_CLUSTER }} \
          --region ${{ vars.AWS_REGION }} \
          --role-arn ${{ env.CLUSTER_ROLE_ARN }}
      
    - name: Install helm-s3 plugin
      run: helm plugin install https://github.com/hypnoglow/helm-s3.git || true
      
    - name: Add helm repo
      run: |
        helm repo add myrepo ${{ env.HELM_CHART_REPO }}
        helm repo update
      
    - name: Deploy Helm chart
      run: |
        helm upgrade -i ${{ env.DEPLOYMENT }} ${{ env.HELM_CHART_REPO }}/${{ env.CHART_NAME }} \
          --namespace ${{ env.KUBE_NAMESPACE }} \
          --create-namespace \
          --version ${{ inputs.RELEASE_REVISION }} \
          --set ${{ env.VALUES }} \
          -f ${{ env.VALUES_LOCAL_PATH }}/env/values-${{ inputs.ENVIRONMENT }}.yaml \
          ${{ inputs.DRYRUN && '--dry-run' || '' }} \
          ${{ inputs.DEBUG && '--debug' || '' }}